#!/bin/bash

export CFLAGS=-"O2"
export CXXFLAGS="-O2"


set -e
PKG_VER=2.41
URL=https://ftp.gnu.org/gnu/glibc/glibc-$PKG_VER.tar.xz
# Not actually a seperate package just the time zone info
ALT_URL=https://www.iana.org/time-zones/repository/releases/tzdata2024a.tar.gz
TAR=$(echo $URL | sed -r 's|(.*)/||')
DIR=$(echo $TAR | sed 's|.tar.*||g')
PACKAGE=$(echo $DIR | sed 's|-[^-]*$||g')


# Get Package

cd /blfs/builds
wget $URL
wget $ALT_URL
wget https://www.linuxfromscratch.org/patches/lfs/development/glibc-$PKG_VER-fhs-1.patch
tar -xvf $TAR
cd $DIR

# Build
patch -Np1 -i ../glibc-$PKG_VER-fhs-1.patch
sed '/width -=/s/workend - string/number_length/' \
    -i stdio-common/vfprintf-process-arg.c
mkdir -v build
cd       build
echo "rootsbindir=/usr/sbin" > configparms
../configure                             \
      --prefix=/usr                      \
      --build=$(../scripts/config.guess) \
      --enable-kernel=4.14                \
      --enable-multi-arch                \
      --disable-nscd \
      --with-headers=/usr/include  libc_cv_slibdir=/usr/lib


make -j22




# Install
sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile
# This is NOT installed on the host system, use mercury-update to update this package
#sudo make install
# Assuming that the host system already has its timezone info
sudo make DESTDIR=/pkgs/$PACKAGE install
# Time zone stuff
tar -xvf ../../tzdata*.tar.gz
mkdir -pv /pkgs/$PACKAGE/usr/share/zoneinfo/{posix,right}


for tz in etcetera southamerica northamerica europe africa antarctica  \
          asia australasia backward; do
    zic -L /dev/null   -d /pkgs/$PACKAGE/usr/share/zoneinfo       ${tz}
    zic -L /dev/null   -d /pkgs/$PACKAGE/usr/share/zoneinfo/posix ${tz}
    zic -L leapseconds -d /pkgs/$PACKAGE/usr/share/zoneinfo/right ${tz}
done

cp -v zone.tab zone1970.tab iso3166.tab /pkgs/$PACKAGE/usr/share/zoneinfo
# This is for daylight savings **sigh**... if the Sunshine Protection act passes, this will need to be changed... remind me then.
zic -d /pkgs/$PACKAGE/usr/share/zoneinfo -p America/New_York


# Fix bug in ldd script
sed '/RTLDLIST=/s@/usr@@g' -i /pkgs/$PACKAGE/usr/bin/ldd


# ld.so.conf
cat >> /pkgs/$PACKAGE/etc/ld.so.conf << "EOF"
# Add an include directory
include /etc/ld.so.conf.d/*.conf

EOF

mkdir -p /pkgs/$PACKAGE/etc/ld.so.conf.d

# Locales
cd ..
install -dm755 /pkgs/$PACKAGE/usr/lib/locale
install -m644 posix/gai.conf /pkgs/$PACKAGE/etc/gai.conf
cat > /pkgs/$PACKAGE/usr/bin/locale-gen << "EOF"
#!/bin/sh
# Credit to Arch Linux for the locale-gen script
set -e

LOCALEGEN=/etc/locale.gen
LOCALES=/usr/share/i18n/locales
if [ -n "$POSIXLY_CORRECT" ]; then
  unset POSIXLY_CORRECT
fi


[ -f $LOCALEGEN -a -s $LOCALEGEN ] || exit 0;

# Remove all old locale dir and locale-archive before generating new
# locale data.
rm -rf /usr/lib/locale/locale-archive || true

umask 022

is_entry_ok() {
  if [ -n "$locale" -a -n "$charset" ] ; then
    true
  else
    echo "error: Bad entry '$locale $charset'"
    false
  fi
}

echo "Generating locales..."
while read locale charset; do \
	case $locale in \#*) continue;; "") continue;; esac; \
	is_entry_ok || continue
	echo -n "  `echo $locale | sed 's/\([^.\@]*\).*/\1/'`"; \
	echo -n ".$charset"; \
	echo -n `echo $locale | sed 's/\([^\@]*\)\(\@.*\)*/\2/'`; \
	echo -n '...'; \
        if [ -f $LOCALES/$locale ]; then input=$locale; else \
        input=`echo $locale | sed 's/\([^.]*\)[^@]*\(.*\)/\1\2/'`; fi; \
	localedef -i $input -c -f $charset -A /usr/share/locale/locale.alias $locale; \
	echo ' done'; \
done < $LOCALEGEN
echo "Generation complete."
EOF
chmod +x /pkgs/$PACKAGE/usr/bin/locale-gen
sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' localedata/SUPPORTED >> /pkgs/$PACKAGE/etc/locale.gen
make -C $(pwd)/localedata objdir=$(pwd)/build \
    DESTDIR=$(pwd)/locales install-locale-files
# Install C.utf8 by default
cp -r locales/usr/lib/locale/C.utf8 -t /pkgs/$PACKAGE/usr/lib/locale
sed -i '/#C\.UTF-8 /d' /pkgs/$PACKAGE/etc/locale.gen

# Final package 
cd /pkgs
sudo echo "linux-api-headers" > /pkgs/$PACKAGE/depends
sudo echo "$PKG_VER" > /pkgs/$PACKAGE/version
sudo tar -cvzpf $PACKAGE.tar.xz $PACKAGE
sudo cp $PACKAGE.tar.xz /finished


cd /blfs/builds
sudo rm -r $DIR


